{"version":3,"sources":["./src/app/models/user.ts","./src/app/service/auth.service.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["export class User {\n  id: number;\n  name: string;\n  email: string;\n  password: string;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from '../models/user';\nimport { Router } from '@angular/router';\nimport { environment } from '../../environments/environment';\n\nconst AUTH_API = environment.apiEndpoint + 'oauth/token';\n\n// const credentialsApp = btoa(environment.credentialsAppUser + ':' + environment.credentialsAppPwd);\n\nconst headers = new HttpHeaders({\n      'Authorization': `Bearer ${localStorage.getItem('token')}`\n    });\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService { \n  \n  private _user: User;\n  private _token: string;\n\n  constructor(private http: HttpClient, private router: Router) {  }\n\n  public get user(): User{\n    if (this._user != null) {\n      return this._user;\n    } else if (this._user == null && sessionStorage.getItem('user') != null) {\n      this._user = JSON.parse(sessionStorage.getItem('user')) as User;\n      return this._user;\n    }\n    return new User();\n  }\n  public get token(): string{\n    if (this._token != null) {\n      return this._token;\n    } else if (this._token == null && sessionStorage.getItem('token') != null) {\n      this._token = sessionStorage.getItem('token');\n      return this._token;\n    }\n    return null;\n  }\n\n  login(user:User): Observable<any> {\n\n    const data = {\n      username: user.email,\n      password: user.password,\n      grant_type: 'password',\n      client_id: environment.credentialsAppUser,\n      client_secret: environment.credentialsAppPassword\n    \n    }\n\n    return this.http.post(AUTH_API, data);\n  }\n\n//Users\n  registerUser(addUser): Observable<any> {\n\n    const data = {\n      name: addUser.name,\n      email: addUser.email,\n      password: addUser.password    \n    }\n\n    return this.http.post(environment.apiEndpoint + 'users/create', data);\n  }\n\n  updateUser(addUser): Observable<any> {\n\n    const data = {\n      name: addUser.name,\n      email: addUser.email,\n      role: addUser.role,\n      password: addUser.password    \n    }\n\n    return this.http.patch(`${environment.apiEndpoint}users/${addUser.id}`, data);\n  }\n\n\n\n//TypeUpload\nregisterTypeUpload(addTypeUpload): Observable<any> {\n\n  const data = {\n    name: addTypeUpload.name,\n    description: addTypeUpload.description,\n    min_upload: addTypeUpload.min_upload\n  }\n\n  return this.http.post(environment.apiEndpoint + 'type_uploads/create', data);\n}\n\n  updateTypeupload(addTypeUpload): Observable<any> {\n\n    const data = {\n      name: addTypeUpload.name,\n      description: addTypeUpload.description,\n      min_upload: addTypeUpload.min_upload\n    }\n\n\n    return this.http.patch(environment.apiEndpoint + 'type_uploads/' + addTypeUpload.id, data);\n  }\n\n\n  //TypeUpload\nregisterOrder(addOrder): Observable<any> {\n\n  const data = {\n    companyName: addOrder.companyName,\n    referenceName: addOrder.referenceName,\n    projectName: addOrder.projectName,\n    address: addOrder.address,\n    zipcode: addOrder.zipcode,\n    city: addOrder.city,\n    province: addOrder.province,\n    country: addOrder.country,\n    checklist: addOrder.checklist,\n    comments: addOrder.comments,\n    contributor: addOrder.contributor\n  }\n\n  return this.http.post(environment.apiEndpoint + 'order/create', data);\n}\n\n  updateOrder(addOrder): Observable<any> {\n\n    const data = {\n      companyName: addOrder.companyName,\n      referenceName: addOrder.referenceName,\n      projectName: addOrder.projectName,\n      address: addOrder.address,\n      zipcode: addOrder.zipcode,\n      city: addOrder.city,\n      province: addOrder.province,\n      country: addOrder.country,\n      checklist: addOrder.checklist,\n      comments: addOrder.comments,\n      contributor: addOrder.contributor\n    }\n\n\n    return this.http.patch(environment.apiEndpoint + 'order/' + addOrder.id, data);\n  }\n\n\n\n  logout():void {\n    this._token = null;\n    this._user = null;\n    sessionStorage.clear();\n    sessionStorage.removeItem('user');\n    sessionStorage.removeItem('token');\n    this.router.navigate(['/auth/sign-in']);\n  }\n\n  saveUser(email: string):void {\n    this._user = new User();\n    this._user.email = email;\n\n    sessionStorage.setItem('user', JSON.stringify(this._user));\n  }\n\n\n  saveToken(accessToken: string):void {\n    this._token = accessToken;\n    console.log(this._token)\n    sessionStorage.setItem('token', accessToken);\n  }\n\n  getTokenData(accessToken: string):any {\n    let rtn = (accessToken != null) ? JSON.parse(atob(accessToken.split(\".\")[1])) : null;\n    return rtn\n  }\n\n  isAuthenticated(): boolean {\n    let payload = this.getTokenData(this.token);\n    let rtn = (payload != null && payload.user_name && payload.user_name.length > 0) ? true : false;\n    return rtn\n\n  }\n\n  headerToken() {\n    let header = new HttpHeaders({'Authorization': `Bearer ${localStorage.getItem('token')}`});\n    return header;\n  }\n\n}"],"sourceRoot":"webpack:///"}